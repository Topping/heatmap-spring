package com.fahlberg.repository;

import com.fahlberg.model.Athlete;
import com.fahlberg.model.Heatmap;
import com.google.gson.Gson;
import com.google.gson.stream.JsonReader;
import org.springframework.beans.factory.InitializingBean;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.context.event.ApplicationReadyEvent;
import org.springframework.context.ApplicationListener;
import org.springframework.context.annotation.Bean;
import org.springframework.stereotype.Component;

import java.io.FileReader;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.NoSuchElementException;

@Component
public class SamplePump implements ApplicationListener<ApplicationReadyEvent> {

    @Autowired
    private AthleteRepository athleteRepository;

    @Override
    public void onApplicationEvent(final ApplicationReadyEvent event) {
        Athlete athlete = null;
        try {
            athlete = athleteRepository.findById(0).get();
        } catch (NoSuchElementException e) {
            Heatmap sample = new Gson().fromJson(Sample.HEATMAP, Heatmap.class);
            List<Heatmap> heatmaps = new ArrayList<Heatmap>();
            heatmaps.add(new Heatmap(sample.getName(), sample.getLastModified(), sample.getRangeStart(), sample.getRangeEnd(), sample.getPolylines())); // To get autogenerated heatmap
            athlete = new Athlete(0, "", "", heatmaps);
            this.athleteRepository.saveAndFlush(athlete);
        }

        return;

    }
}
